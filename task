Техническое задание для разработки системы регистрации и авторизации

Общее описание
Цель проекта - создать простую систему регистрации и авторизации пользователей с использованием HTML, PHP и MySQL. 
Система должна включать:
1. Страницу регистрации
2. Страницу авторизации
3. Страницу профиля (которая отображает статус авторизации пользователя)

Требования к функциональности
1.Страница регистрации
Форма регистрации должна содержать следующие поля: 
имя пользователя
адрес электронной почты 
пароль.
Все поля обязательны для заполнения.
Необходима валидация на стороне сервера:
Имя пользователя должно быть уникальным.
Адрес электронной почты должен быть валидным и уникальным.
Пароль должен соответствовать определенным требованиям безопасности (например, минимальная длина, наличие чисел и букв).
После успешной регистрации данные пользователя должны сохраняться в таблице users в базе данных MySQL.

2.Страница авторизации
Форма авторизации должна содержать следующие поля: 
имя пользователя или адрес электронной почты и пароль.
Все поля обязательны для заполнения.Необходима валидация на стороне сервера:
Пользователь с указанным именем пользователя/адресом электронной почты должен существовать.
Пароль должен соответствовать сохраненному паролю для данного пользователя.
После успешной авторизации пользователь должен быть перенаправлен на страницу профиля.

3.Страница профиля
Страница профиля должна отображать сообщение, указывающее, авторизован пользователь или нет.Если пользователь авторизован, сообщение должно включать имя пользователя. Если пользователь не авторизован, он должен быть перенаправлен на страницу авторизации.


Требования к базе данных
Необходимо создать таблицу users в базе данных MySQL с следующими полями:

id (INT, PRIMARY KEY, AUTO_INCREMENT)
username (VARCHAR(255), UNIQUE)
email (VARCHAR(255), UNIQUE)
password (VARCHAR(255))

Дополнительные требования
Все взаимодействия с базой данных должны быть реализованы с использованием подготовленных выражений для защиты от SQL-инъекций.
Пароли должны храниться в базе данных в зашифрованном виде с использованием стандартной PHP функции password_hash.
Использовать сессии для отслеживания статуса авторизации пользователя.
Пожалуйста, убедитесь, что код хорошо структурирован, читаем и соответствует стандартам PSR-12.
